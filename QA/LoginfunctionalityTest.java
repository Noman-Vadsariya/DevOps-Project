// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class LoginfunctionalityTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void casehandlingblankpasswordfield() {
    driver.get("http://127.0.0.1:5500/login.html");
    driver.manage().window().setSize(new Dimension(654, 672));
    driver.findElement(By.cssSelector(".password input")).click();
    driver.findElement(By.cssSelector("input:nth-child(4)")).click();
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".password > .error"));
      assert(elements.size() > 0);
    }
    assertThat(driver.findElement(By.cssSelector(".password > .error")).getText(), is("Password can\\\'t be blank"));
  }
  @Test
  public void casehandlinginvalidemailaddress() {
    driver.get("http://127.0.0.1:5500/login.html");
    driver.manage().window().setSize(new Dimension(654, 672));
    driver.findElement(By.cssSelector(".email input")).click();
    driver.findElement(By.cssSelector(".email input")).sendKeys("abc.cm");
    driver.findElement(By.cssSelector(".password input")).click();
    driver.findElement(By.cssSelector(".password input")).sendKeys("111");
    driver.findElement(By.cssSelector("input:nth-child(4)")).click();
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".email > .error"));
      assert(elements.size() > 0);
    }
    assertThat(driver.findElement(By.cssSelector(".email > .error")).getText(), is("Enter a valid email address"));
  }
  @Test
  public void casehandlingblankemailaddressfield() {
    driver.get("http://127.0.0.1:5500/login.html");
    driver.findElement(By.cssSelector(".email input")).click();
    driver.findElement(By.cssSelector("input:nth-child(4)")).click();
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".email > .error"));
      assert(elements.size() > 0);
    }
    assertThat(driver.findElement(By.cssSelector(".email > .error")).getText(), is("Email can\\\'t be blank"));
  }
  @Test
  public void casehandlingvalidemailaddressemptypasswordfield() {
    driver.get("http://127.0.0.1:5500/login.html");
    driver.findElement(By.cssSelector(".email input")).click();
    driver.findElement(By.cssSelector(".email input")).sendKeys("abc@nu.edu.pk");
    driver.findElement(By.cssSelector("input:nth-child(4)")).click();
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".password > .error"));
      assert(elements.size() > 0);
    }
    assertThat(driver.findElement(By.cssSelector(".password > .error")).getText(), is("Password can\\\'t be blank"));
  }
  @Test
  public void casehandlingvalidemailpassword() {
    driver.get("http://127.0.0.1:5500/login.html");
    driver.findElement(By.cssSelector(".email input")).click();
    driver.findElement(By.cssSelector(".email input")).sendKeys("abc@nu.edu.pk");
    driver.findElement(By.cssSelector(".password input")).click();
    driver.findElement(By.cssSelector(".password input")).sendKeys("11111");
    driver.findElement(By.cssSelector("input:nth-child(4)")).click();
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".password > .error"));
      assert(elements.size() == 0);
    }
  }
}
